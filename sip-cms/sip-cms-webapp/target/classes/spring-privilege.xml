<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.2.xsd
">
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- sessionManager -->
		<!-- <property name="sessionManager" ref="sessionManager" /> -->
		<property name="realm" ref="authRealm" />
		<!-- -->
		<property name="cacheManager" ref="shiroRedisManager" />
	</bean>

	<!-- <bean id="userLoginAttemptService" class="com.haoyu.ipanther.common.login.service.impl.UserLoginAttemptServiceImpl"> 
		<property name="maxAttempts" value="3"/> </bean> -->

	<bean id="authRealm" class="com.haoyu.sip.auth.realm.DefaultAuthRealm" />

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/admin/login" />
		<property name="successUrl" value="/admin/index" />
		<property name="unauthorizedUrl" value="/403.jsp" />
		<property name="filterChainDefinitions">
			<value>
				/=anon
				/*.html=anon
				/remoteFiles/**=anon
				**/cms/**=anon
				/cms/**=anon
				/css/**=anon
				/js/**=anon
				/images/**=anon
				/login=authc
				/logout=logout
				/** = authc,cu
			</value>
		</property>
		<property name="filters">
			<map>
				<entry key="cu" value-ref="currentUserFilter" />
			</map>
		</property>
	</bean>
	<bean id="currentUserFilter" class="com.haoyu.sip.auth.filter.CurrentUserFilter" />
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" 
		depends-on="lifecycleBeanPostProcessor" > </bean> -->

	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<!-- shiro redisManager -->
	<bean id="redisManager" class="org.crazycake.shiro.RedisManager">
		<property name="host" value="192.168.0.4" />
		<property name="port" value="6379" />
		<property name="expire" value="1800" />
	</bean>

	<!-- redisSessionDAO -->
	<bean id="redisSessionDAO" class="org.crazycake.shiro.RedisSessionDAO">
		<property name="redisManager" ref="redisManager" />
	</bean>

	<!-- cacheManager -->
	<bean id="shiroRedisManager" class="org.crazycake.shiro.RedisCacheManager">
		<property name="redisManager" ref="redisManager" />
	</bean>
</beans>