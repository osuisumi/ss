<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haoyu.sip.note.dao.impl.mybatis.NoteMapper">

	<resultMap id="BaseResultMap" type="com.haoyu.sip.note.entity.Note">
		<id column="ID" property="id" jdbcType="VARCHAR" />
		<result column="TITTLE" property="tittle" jdbcType="VARCHAR" />
		<result column="CONTENT" property="content" jdbcType="VARCHAR" />
		<result column="STATE" property="state" jdbcType="VARCHAR" />
		<result column="CREATE_TIME" property="createTime" jdbcType="BIGINT" />
		<result column="RELATION_ID" property="relation.id" jdbcType="VARCHAR" />
		<result column="TYPE" property="relation.type" jdbcType="VARCHAR" />
		<result column="UPDATE_TIME" property="updateTime" jdbcType="BIGINT" />
		<result column="UPDATEDBY" property="updatedby.id" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap type="map" id="NoteCountMap">
		<result column="RELATION_ID" property="relationId" jdbcType="VARCHAR"  />
		<result column="COUNT" property="count" jdbcType="INTEGER"  />
	</resultMap>
	<sql id="BaseSelectSql">
		select
			N.ID,
			N.TITLE,
			N.CONTENT,
			N.STATE,
			N.CREATOR,
			N.CREATE_TIME,
			N.UPDATEDBY,
			N.UPDATE_TIME,
			N.RELATION_ID
		from
			NOTE N
	</sql>
	
	<sql id="BaseWhereSql">
		where N.IS_DELETED = 'N'
		<if test="content != null and content != ''">
			and N.CONTENT like '%${content}%'
		</if>
		<if test="relationIds != null">
			and N.RELATION_ID in 
			<foreach collection="relationIds" open="(" close=")" item="item" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="creator != null and creator != ''">
			and N.CREATOR = #{creator,jdbcType=VARCHAR}
		</if>
	</sql>
	
	<select id="select" parameterType="java.util.Map" resultMap="BaseResultMap">
		<include refid="BaseSelectSql" />
		<include refid="BaseWhereSql" />
	</select>

	<select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
		<include refid="BaseSelectSql" />
		where N.IS_DELETED = 'N'
			and  N.ID = #{id,jdbcType=VARCHAR} 
	</select>

	<insert id="insert" parameterType="com.haoyu.sip.note.entity.Note">
		insert into NOTE
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="relation != null and relation.id != null">
				RELATION_ID,
			</if>
			<if test="title != null">
				TITLE,
			</if>
			<if test="content != null">
				CONTENT,
			</if>
			<if test="state != null">
				STATE,
			</if>
			<if test="creator !=null and creator.id != null">
				CREATOR,
			</if>
			<if test="createTime != null and createTime > 0">
				CREATE_TIME,
			</if>
			<if test="updatedby != null and updatedby.id != null">
				UPDATEDBY,
			</if>
			<if test="createTime != null and createTime > 0">
				UPDATE_TIME,
			</if>
			<if test="isDeleted != null">
				IS_DELETED,
			</if>
			<if test="version != null">
				VERSION,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="relation != null and relation.id != null">
				#{relation.id,jdbcType=VARCHAR},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				#{content,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				#{state,jdbcType=VARCHAR},
			</if>
			<if test="creator !=null and creator.id != null">
				#{creator.id,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null and createTime > 0">
				#{createTime,jdbcType=BIGINT},
			</if>
			<if test="updatedby != null and updatedby.id != null">
				#{updatedby.id,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null and updateTime > 0">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isDeleted != null">
				#{isDeleted,jdbcType=VARCHAR},
			</if>
			<if test="version != null">
				#{version,jdbcType=DECIMAL},
			</if>
		</trim>
	</insert>

	<update id="updateByPrimaryKey" parameterType="com.haoyu.sip.note.entity.Note">
		update NOTE
		<set>
			<if test="title != null and title !=''">
				TITLE = #{title,jdbcType=VARCHAR},
			</if>
			<if test="relation != null and relation.id != null">
				RELATION_ID = #{relation.id,jdbcType=VARCHAR},
			</if>
			<if test="content != null and content !=''">
				CONTENT = #{content,jdbcType=VARCHAR},
			</if>
			<if test="state != null and state !=''">
				STATE = #{state,jdbcType=VARCHAR},
			</if>
			<if test="updatedby != null and updatedby.id != null">
				UPDATEDBY = #{updatedby.id,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null and updateTime > 0">
				UPDATE_TIME = #{updateTime,jdbcType=BIGINT},
			</if>
			VERSION = VERSION+1
		</set>
		where ID = #{id,jdbcType=VARCHAR}
	</update>

	<update id="deleteByLogic" parameterType="com.haoyu.sip.note.entity.Note">
		update NOTE
		set IS_DELETED = 'Y', UPDATE_TIME = #{updateTime,jdbcType=DECIMAL}
		<if test="updatedby != null and updatedby.id != null and updatedby.id != ''">
			,UPDATEDBY = #{updatedby.id,jdbcType=VARCHAR}
		</if>
		,VERSION = VERSION + 1
		where ID = #{id,jdbcType=VARCHAR}
	</update>
	<select id="getNoteCountByRelationIds" resultMap="NoteCountMap" >
		select
			RELATION_ID,
			COUNT(RELATION_ID) COUNT
		from
			NOTE
		where
			RELATION_ID in 
			<foreach item="id" open="(" close=")" separator="," collection="ids">
				#{id}
			</foreach>
		<if test="creator != null and creator != ''">
			and CREATOR = #{creator,jdbcType=VARCHAR}
		</if>
		and IS_DELETED = 'N'
		group by RELATION_ID
	</select>
</mapper>