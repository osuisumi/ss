<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" id="WebApp_ID" version="3.1">
  <display-name>SIP Login System (sip-login) </display-name>
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
      /WEB-INF/spring-config/*.xml
      /WEB-INF/deployerConfigContext.xml
    </param-value>
  </context-param>

  <filter>
    <filter-name>CAS Client Info Logging Filter</filter-name>
    <filter-class>com.github.inspektr.common.web.ClientInfoThreadLocalFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>CAS Client Info Logging Filter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
 <!--  <filter>
	<filter-name>CAS Single Sign Out Filter</filter-name>
	<filter-class>
		org.jasig.cas.client.session.SingleSignOutFilter
	</filter-class>
  </filter>
  <filter-mapping>
	<filter-name>CAS Single Sign Out Filter</filter-name>
	<url-pattern>/*</url-pattern>
  </filter-mapping>
  <listener>
	<listener-class>
	org.jasig.cas.client.session.SingleSignOutHttpSessionListener
	</listener-class>
  </listener>
  <filter>
        <filter-name>CASFilter</filter-name>
        <filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>
        <init-param>
            <param-name>casServerLoginUrl</param-name>
            <param-value>http://localhost:9090/cas/login</param-value>
        </init-param>
        <init-param>
            <param-name>serverName</param-name>
            <param-value>http://localhost:9090</param-value>
        </init-param>
        <init-param>
        	<param-name>ignoreUrlPatternType</param-name>
        	<param-value>CONTAINS</param-value>
        </init-param>
         <init-param>
        	<param-name>ignorePattern</param-name>
        	<param-value>/css,/js,/images,/login,/logout,/validate,/serviceValidate,/p3/serviceValidate,/CentralAuthenticationService,/status,/statistics,.do,/ws/</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CASFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
    
    <filter>
        <filter-name>CAS Validation Filter</filter-name>
        <filter-class>
            org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter</filter-class>
        <init-param>
            <param-name>casServerUrlPrefix</param-name>
            <param-value>http://localhost:9090/cas</param-value>
        </init-param>
        <init-param>
            <param-name>serverName</param-name>
            <param-value>http://localhost:9090</param-value>
        </init-param>
        <init-param>
        	<param-name>ignoreUrlPatternType</param-name>
        	<param-value>CONTAINS</param-value>
        </init-param>
         <init-param>
        	<param-name>ignorePattern</param-name>
        	<param-value>/css,/js,/images,/login,/logout,/validate,/serviceValidate,/p3/serviceValidate,/CentralAuthenticationService,/status,/statistics,.do,/ws/</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CAS Validation Filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping> -->
<!--    <filter>
		<filter-name>
			CAS Assertion Thread Local Filter
		</filter-name>
		<filter-class>
			org.jasig.cas.client.util.AssertionThreadLocalFilter
		</filter-class>
  </filter>
  <filter-mapping>
		<filter-name>CAS Assertion Thread Local Filter</filter-name>
		<url-pattern>/*</url-pattern>
  </filter-mapping> -->
  <filter>
    <filter-name>springSecurityFilterChain</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>springSecurityFilterChain</filter-name>
    <url-pattern>/status</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>springSecurityFilterChain</filter-name>
    <url-pattern>/statistics</url-pattern>
  </filter-mapping>

  <filter>
    <filter-name>characterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>characterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!--
    - Loads the CAS ApplicationContext.
    - The deployer choice here is how to handle Throwables thrown by Spring's
    - ContextLoaderListener.  The Spring ContextLoaderListener will throw an exception when the
    - application context cannot be loaded, say because the bean XML files are not valid XML or do not
    - refer to real classes and properties or because a bean configured via Spring throws an exception
    - at construction, property setting, or on an afterPropertiesSet() lifecycle method.
    -
    - If you'd like these errors to be fatal and prevent the CAS servlet context from loading at all,
    - use org.springframework.web.context.ContextLoaderListener.
    -
    - If you'd like these errors to result in all requests for CAS getting a "CAS is Unavailable" response,
    - use com.haoyu.sip.login.web.init.SafeContextLoaderListener
  -->
  <listener>
    <listener-class>
      com.haoyu.sip.login.web.init.SafeContextLoaderListener
    </listener-class>
  </listener>

  <!--
    - This is the Spring dispatcher servlet which delegates all requests to the
    - Spring WebMVC controllers as configured in cas-servlet.xml.
    -
    - The choice made above about how to handle a broken ApplicationContext at
    - context initialization applies here as well, since this servlet is load-on-startup.
    -
    - If you'd like these errors to be fatal and prevent the CAS servlet from loading at all,
    - use org.springframework.web.servlet.DispatcherServlet.
    -
    - If you'd like these errors to result in all requests for CAS getting a "CAS is Unavailable" response,
    - use com.haoyu.sip.login.web.init.SafeDispatcherServlet
  -->
  <servlet>
    <servlet-name>cas</servlet-name>
    <servlet-class>
      com.haoyu.sip.login.web.init.SafeDispatcherServlet
    </servlet-class>
    <init-param>
      <param-name>publishContext</param-name>
      <param-value>false</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
    <async-supported>true</async-supported>
  </servlet>  
  <servlet-mapping>
    <servlet-name>cas</servlet-name>
    <url-pattern>/login</url-pattern>
    <url-pattern>/logout</url-pattern>
    <url-pattern>/validate</url-pattern>
    <url-pattern>/serviceValidate</url-pattern>
    <url-pattern>/p3/serviceValidate</url-pattern>
    <url-pattern>/proxy</url-pattern>
    <url-pattern>/proxyValidate</url-pattern>
    <url-pattern>/p3/proxyValidate</url-pattern>
    <url-pattern>/CentralAuthenticationService</url-pattern>
    <url-pattern>/status</url-pattern>
    <url-pattern>/statistics</url-pattern>
    <url-pattern>/authorizationFailure.html</url-pattern>
    <url-pattern>*.do</url-pattern>
    <url-pattern>/ws/*</url-pattern>
  </servlet-mapping>
  <session-config>
    <!-- Default to 5 minute session timeouts -->
    <session-timeout>5</session-timeout>
  </session-config>

  <error-page>
    <error-code>401</error-code>
    <location>/authorizationFailure.html</location>
  </error-page>

  <error-page>
    <error-code>403</error-code>
    <location>/authorizationFailure.html</location>
  </error-page>

  <error-page>
    <error-code>404</error-code>
    <location>/</location>
  </error-page>

  <error-page>
    <error-code>500</error-code>
    <location>/WEB-INF/view/jsp/errors.jsp</location>
  </error-page>

  <error-page>
    <error-code>501</error-code>
    <location>/WEB-INF/view/jsp/errors.jsp</location>
  </error-page>

  <error-page>
    <error-code>503</error-code>
    <location>/WEB-INF/view/jsp/errors.jsp</location>
  </error-page>

  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
</web-app>
